{"ast":null,"code":"import { mapState } from 'vuex';\nexport default {\n  name: \"MyCount\",\n  data() {\n    return {\n      num: 1\n    };\n  },\n  computed: {\n    // 程序员自己去写\n    // sum(){\n    //   return this.$store.state.sum\n    // },\n    // school(){\n    //   return this.$store.state.school\n    // },\n    // subject(){\n    //   return this.$store.state.subject\n    // },\n\n    // 借助mapState生成的计算属性，从state中读取数据。(对象写法)  对象中的key表示计算属性，vue表示生成return this.$store.state.vl\n    // ...mapState({sum:'sum',school:'school',subject:'subject'}),\n\n    // 借助mapState生成的计算属性，从state中读取数据。（数组写法）\n    ...mapState(['sum', 'school', 'subject']),\n    bigSum() {\n      return this.$store.getters.bigSum;\n    }\n  },\n  methods: {\n    increment() {\n      this.$store.dispatch('jia', this.num);\n    },\n    decrement() {\n      this.$store.dispatch('jian', this.num);\n    },\n    incrementOdd() {\n      this.$store.dispatch('jiaOdd', this.num);\n    },\n    incrementWait() {\n      this.$store.dispatch('jiaWait', this.num);\n    }\n  },\n  mounted() {\n    console.log(this.$store.getters.bigSum);\n  }\n};","map":{"version":3,"mappings":"AAmBA;AACA;EACAA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;IAEAC;MACA;IACA;EAEA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACAC;EACA;AAEA","names":["name","data","num","computed","bigSum","methods","increment","decrement","incrementOdd","incrementWait","mounted","console"],"sourceRoot":"src/components","sources":["Count.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 模版中可以看到VC身上所有的东西，所以这里直接$store,不用加this.$store -->\n    <h1>当前求和: {{ sum }}</h1> \n    <h3>当前和放大10倍: {{ bigSum }}</h3> \n    <h3>我在{{ school }}学习{{ subject }}</h3>\n    <select v-model.number=\"num\">\n      <option value=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\">3</option>\n    </select>\n    <button @click=\"increment\">+</button>\n    <button @click=\"decrement\">-</button>\n    <button @click=\"incrementOdd\">当前求和为奇数再加</button>\n    <button @click=\"incrementWait\">等一等再加</button>\n  </div>\n</template>\n<script>\n\n  import { mapState } from 'vuex'\n  export default {\n    name:\"MyCount\",\n    data() {\n      return {\n        num: 1\n      }\n    },\n    computed:{\n      // 程序员自己去写\n      // sum(){\n      //   return this.$store.state.sum\n      // },\n      // school(){\n      //   return this.$store.state.school\n      // },\n      // subject(){\n      //   return this.$store.state.subject\n      // },\n      \n      // 借助mapState生成的计算属性，从state中读取数据。(对象写法)  对象中的key表示计算属性，vue表示生成return this.$store.state.vl\n      // ...mapState({sum:'sum',school:'school',subject:'subject'}),\n\n      // 借助mapState生成的计算属性，从state中读取数据。（数组写法）\n      ...mapState(['sum','school','subject']),\n\n      bigSum(){\n        return this.$store.getters.bigSum\n      },\n\n    },\n    methods: {\n      increment(){\n        this.$store.dispatch('jia', this.num)\n      },\n      decrement(){\n       this.$store.dispatch('jian', this.num)\n      },\n      incrementOdd(){\n        this.$store.dispatch('jiaOdd', this.num)\n      },\n      incrementWait(){\n        this.$store.dispatch('jiaWait', this.num)\n      }\n    },\n    mounted() {\n      console.log(this.$store.getters.bigSum)\n    },\n    \n  }\n  \n</script>\n<style>\n  button{\n    margin-left: 10px;\n  }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}