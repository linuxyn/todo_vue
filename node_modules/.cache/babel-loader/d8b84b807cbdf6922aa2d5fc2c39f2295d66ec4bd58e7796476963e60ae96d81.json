{"ast":null,"code":"export default {\n  name: 'todosItem',\n  // 声明接收todo对象\n  props: ['todo', 'checkTodo'],\n  methods: {\n    handleCheck(id) {\n      // 通过App组件将对应的done值取反\n      this.checkTodo(id);\n    }\n  }\n};","map":{"version":3,"mappings":"AAYA;EACAA;EACA;EACAC;EACAC;IACAC;MACA;MACA;IACA;EACA;AACA","names":["name","props","methods","handleCheck"],"sourceRoot":"src/components","sources":["todosItem.vue"],"sourcesContent":["<template>\n  <li>\n    <label>\n      <input type=\"checkbox\" :checked=\"todo.done\" @change=\"handleCheck(todo.id)\"/>\n      <!-- 如下代码也能实现功能，但是不太推荐，因为违反原则，因为修改了props，利用vue监测不到对象中元素的改变这一问题，所以能实现功能 -->\n      <!-- <input type=\"checkbox\" v-model=\"todo.done\"> -->\n      <span>{{ todo.title }}</span>\n    </label>\n    <button class=\"btn btn-danger\">删除</button>\n  </li>\n</template>\n<script>\n  export default {\n    name: 'todosItem',\n    // 声明接收todo对象\n    props: ['todo','checkTodo'],\n    methods: {\n      handleCheck(id){\n        // 通过App组件将对应的done值取反\n        this.checkTodo(id)\n      }\n    },\n  }\n</script>\n<style scoped>\n  /*item*/\n  li {\n    list-style: none;\n    height: 36px;\n    line-height: 36px;\n    padding: 0 5px;\n    border-bottom: 1px solid #ddd;\n  }\n\n  li label {\n    float: left;\n    cursor: pointer;\n  }\n\n  li label li input {\n    vertical-align: middle;\n    margin-right: 6px;\n    position: relative;\n    top: -1px;\n  }\n\n  li button {\n    float: right;\n    display: none;\n    margin-top: 3px;\n  }\n\n  li:before {\n    content: initial;\n  }\n\n  li:last-child {\n    border-bottom: none;\n  }\n\n  li:hover {\n    background-color:#ddd;\n  }\n  li:hover button{\n    display: block;\n  }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}