{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\n// 该文件用于创建Vuex中最核心的store\n\n// 引入Vue\nimport Vue from 'vue';\n// 引入vuex\nimport Vuex from 'vuex';\n\n// 准备state-用于存储数据\nconst state = {\n  sum: 0,\n  // 当前的和\n  school: '尚硅谷',\n  subject: '前端',\n  personList: [{\n    id: '001',\n    name: '张三'\n  }]\n};\n\n// 请求相关配置\nconst countOptions = {\n  // 准备actions--用于响应组件中的动作,比如发送ajax请求，业务逻辑处理等\n  actions: {\n    jiaOdd(context, value) {\n      console.log('actions中的jiaOdd被调用了', context);\n      if (context.state.sum % 2) {\n        context.commit('JIA', value);\n      }\n    },\n    jiaWait(context, value) {\n      console.log('actions中的jiaWait被调用了');\n      setTimeout(() => {\n        context.commit('JIA', value);\n      }, 500);\n    }\n  },\n  // 准备mutations--用于操作数据(state)\n  mutations: {\n    JIA(state, value) {\n      console.log('mutations中的JIA被调用了', state, value);\n      state.sum += value;\n    },\n    JIAN(state, value) {\n      console.log('mutations中的JIAN被调用了', state, value);\n      state.sum -= value;\n    }\n  },\n  // 准备getters-用于将state中的数据进行加工\n  getters: {\n    bigSum(state) {\n      return state.sum * 10;\n    }\n  },\n  state: {\n    sum: 0,\n    // 当前的和\n    school: '尚硅谷',\n    subject: '前端'\n  }\n};\n\n// 人员管理相关配置\nconst personOptions = {\n  actions: {\n    Add_Person(state, value) {\n      console.log('mutations中的Add_Person被调用了', state, value);\n      state.personList.unshift(value);\n    }\n  },\n  mutations: {},\n  getters: {},\n  state: {\n    personList: [{\n      id: '001',\n      name: '张三'\n    }]\n  }\n};\nVue.use(Vuex);\n// 创建并暴露store\nexport default new Vuex.Store({\n  actions,\n  mutations,\n  state,\n  getters\n});","map":{"version":3,"names":["Vue","Vuex","state","sum","school","subject","personList","id","name","countOptions","actions","jiaOdd","context","value","console","log","commit","jiaWait","setTimeout","mutations","JIA","JIAN","getters","bigSum","personOptions","Add_Person","unshift","use","Store"],"sources":["/Users/linuxyn/todos_vue/src/store/index.js"],"sourcesContent":["// 该文件用于创建Vuex中最核心的store\n\n// 引入Vue\nimport Vue from 'vue'\n// 引入vuex\nimport Vuex from 'vuex'\n\n\n// 准备state-用于存储数据\nconst state = {\n  sum:0,// 当前的和\n  school:'尚硅谷',\n  subject: '前端',\n  personList:[\n    {id:'001',name:'张三'}\n  ]\n}\n\n\n// 请求相关配置\nconst countOptions = {\n    // 准备actions--用于响应组件中的动作,比如发送ajax请求，业务逻辑处理等\n  actions: {\n    jiaOdd(context,value){\n      console.log('actions中的jiaOdd被调用了', context)\n      if(context.state.sum % 2) {\n        context.commit('JIA', value) \n      }\n    },\n    jiaWait(context,value){\n      console.log('actions中的jiaWait被调用了')\n      setTimeout(() => {\n        context.commit('JIA', value)\n      }, 500);\n    },\n  },\n  // 准备mutations--用于操作数据(state)\n  mutations: {\n    JIA(state,value){\n      console.log('mutations中的JIA被调用了',state, value)\n      state.sum += value\n    },\n    JIAN(state,value){\n      console.log('mutations中的JIAN被调用了',state, value)\n      state.sum -= value\n    }\n  },\n  // 准备getters-用于将state中的数据进行加工\n  getters: {\n    bigSum(state){\n      return state.sum*10\n    }\n  },\n  state: {\n    sum:0,// 当前的和\n    school:'尚硅谷',\n    subject: '前端',\n  }\n\n}\n\n// 人员管理相关配置\nconst personOptions = {\n  actions:{\n    Add_Person(state, value){\n      console.log('mutations中的Add_Person被调用了',state, value)\n      state.personList.unshift(value)\n    }\n  },\n  mutations:{},\n  getters:{},\n  state:{\n    personList:[\n      {id:'001',name:'张三'}\n    ]\n  }\n\n}\n\nVue.use(Vuex)\n// 创建并暴露store\nexport default new Vuex.Store({\n  actions,\n  mutations,\n  state,\n  getters\n})\n\n"],"mappings":";AAAA;;AAEA;AACA,OAAOA,GAAG,MAAM,KAAK;AACrB;AACA,OAAOC,IAAI,MAAM,MAAM;;AAGvB;AACA,MAAMC,KAAK,GAAG;EACZC,GAAG,EAAC,CAAC;EAAC;EACNC,MAAM,EAAC,KAAK;EACZC,OAAO,EAAE,IAAI;EACbC,UAAU,EAAC,CACT;IAACC,EAAE,EAAC,KAAK;IAACC,IAAI,EAAC;EAAI,CAAC;AAExB,CAAC;;AAGD;AACA,MAAMC,YAAY,GAAG;EACjB;EACFC,OAAO,EAAE;IACPC,MAAM,CAACC,OAAO,EAACC,KAAK,EAAC;MACnBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,OAAO,CAAC;MAC3C,IAAGA,OAAO,CAACV,KAAK,CAACC,GAAG,GAAG,CAAC,EAAE;QACxBS,OAAO,CAACI,MAAM,CAAC,KAAK,EAAEH,KAAK,CAAC;MAC9B;IACF,CAAC;IACDI,OAAO,CAACL,OAAO,EAACC,KAAK,EAAC;MACpBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnCG,UAAU,CAAC,MAAM;QACfN,OAAO,CAACI,MAAM,CAAC,KAAK,EAAEH,KAAK,CAAC;MAC9B,CAAC,EAAE,GAAG,CAAC;IACT;EACF,CAAC;EACD;EACAM,SAAS,EAAE;IACTC,GAAG,CAAClB,KAAK,EAACW,KAAK,EAAC;MACdC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAACb,KAAK,EAAEW,KAAK,CAAC;MAC9CX,KAAK,CAACC,GAAG,IAAIU,KAAK;IACpB,CAAC;IACDQ,IAAI,CAACnB,KAAK,EAACW,KAAK,EAAC;MACfC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACb,KAAK,EAAEW,KAAK,CAAC;MAC/CX,KAAK,CAACC,GAAG,IAAIU,KAAK;IACpB;EACF,CAAC;EACD;EACAS,OAAO,EAAE;IACPC,MAAM,CAACrB,KAAK,EAAC;MACX,OAAOA,KAAK,CAACC,GAAG,GAAC,EAAE;IACrB;EACF,CAAC;EACDD,KAAK,EAAE;IACLC,GAAG,EAAC,CAAC;IAAC;IACNC,MAAM,EAAC,KAAK;IACZC,OAAO,EAAE;EACX;AAEF,CAAC;;AAED;AACA,MAAMmB,aAAa,GAAG;EACpBd,OAAO,EAAC;IACNe,UAAU,CAACvB,KAAK,EAAEW,KAAK,EAAC;MACtBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAACb,KAAK,EAAEW,KAAK,CAAC;MACrDX,KAAK,CAACI,UAAU,CAACoB,OAAO,CAACb,KAAK,CAAC;IACjC;EACF,CAAC;EACDM,SAAS,EAAC,CAAC,CAAC;EACZG,OAAO,EAAC,CAAC,CAAC;EACVpB,KAAK,EAAC;IACJI,UAAU,EAAC,CACT;MAACC,EAAE,EAAC,KAAK;MAACC,IAAI,EAAC;IAAI,CAAC;EAExB;AAEF,CAAC;AAEDR,GAAG,CAAC2B,GAAG,CAAC1B,IAAI,CAAC;AACb;AACA,eAAe,IAAIA,IAAI,CAAC2B,KAAK,CAAC;EAC5BlB,OAAO;EACPS,SAAS;EACTjB,KAAK;EACLoB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}