{"ast":null,"code":"// 该文件用于创建Vuex中最核心的store\n\n// 引入Vue\nimport Vue from 'vue';\n// 引入vuex\nimport Vuex from 'vuex';\n\n// 准备actions--用于响应组件中的动作,比如发送ajax请求，业务逻辑处理等\nconst actions = {\n  jia(context, value) {\n    console.log('actions中的jia被调用了', context, value);\n    context.commit('JIA', value); // 这里大写是为了和mutation中的JIA做个区分，不做强制要求\n  },\n\n  jian(context, value) {\n    console.log('actions中的jian被调用了');\n    context.commit('JIAN', value);\n  },\n  jiaOdd(context, value) {\n    console.log('actions中的jiaOdd被调用了', context);\n    if (context.state.sum % 2) {\n      context.commit('JIAODD', value);\n    }\n  },\n  jiaWait(context, value) {\n    console.log('actions中的jiaWait被调用了');\n    setTimeout(() => {\n      context.commit('JIAWAIT', value);\n    }, 500);\n  }\n};\n\n// 准备mutations--用于操作数据(state)\nconst mutations = {\n  JIA(state, value) {\n    console.log('mutations中的JIA被调用了', state, value);\n    state.sum += value;\n  },\n  JIAN(state, value) {\n    console.log('mutations中的JIAN被调用了', state, value);\n    state.sum -= value;\n  },\n  JIAODD(state, value) {\n    console.log('mutations中的JIAODD被调用了', state, value);\n    state.sum += value;\n  },\n  JIAWAIT(state, value) {\n    console.log('mutations中的JIAWAIT被调用了', state, value);\n    state.sum += value;\n  }\n};\n\n// 准备state--用于存储数据\nconst state = {\n  sum: 0 // 当前的和\n};\n\n// 准备getters-用于将state中的数据进行加工\nconst getters = {\n  bigSum(state) {\n    return state.sum;\n  }\n};\nVue.use(Vuex);\n// 创建并暴露store\nexport default new Vuex.Store({\n  actions,\n  mutations,\n  state\n});","map":{"version":3,"names":["Vue","Vuex","actions","jia","context","value","console","log","commit","jian","jiaOdd","state","sum","jiaWait","setTimeout","mutations","JIA","JIAN","JIAODD","JIAWAIT","getters","bigSum","use","Store"],"sources":["/Users/linuxyn/todos_vue/src/store/index.js"],"sourcesContent":["// 该文件用于创建Vuex中最核心的store\n\n// 引入Vue\nimport Vue from 'vue'\n// 引入vuex\nimport Vuex from 'vuex'\n\n// 准备actions--用于响应组件中的动作,比如发送ajax请求，业务逻辑处理等\nconst actions = {\n  jia(context,value){\n    console.log('actions中的jia被调用了',context,value)\n    context.commit('JIA', value) // 这里大写是为了和mutation中的JIA做个区分，不做强制要求\n  },\n  jian(context,value){\n    console.log('actions中的jian被调用了')\n    context.commit('JIAN', value)\n  },\n  jiaOdd(context,value){\n    console.log('actions中的jiaOdd被调用了', context)\n    if(context.state.sum % 2) {\n      context.commit('JIAODD', value) \n    }\n  },\n  jiaWait(context,value){\n    console.log('actions中的jiaWait被调用了')\n    setTimeout(() => {\n      context.commit('JIAWAIT', value)\n    }, 500);\n  },\n}\n\n// 准备mutations--用于操作数据(state)\nconst mutations = {\n  JIA(state,value){\n    console.log('mutations中的JIA被调用了',state, value)\n    state.sum += value\n  },\n  JIAN(state,value){\n    console.log('mutations中的JIAN被调用了',state, value)\n    state.sum -= value\n  },\n  JIAODD(state,value){\n    console.log('mutations中的JIAODD被调用了',state, value)\n    state.sum += value\n  },\n  JIAWAIT(state,value){\n    console.log('mutations中的JIAWAIT被调用了',state, value)\n    state.sum += value\n  }\n}\n\n// 准备state--用于存储数据\nconst state = {\n  sum:0 // 当前的和\n}\n\n// 准备getters-用于将state中的数据进行加工\nconst getters = {\n  bigSum(state){\n    return state.sum\n  }\n}\n\nVue.use(Vuex)\n// 创建并暴露store\nexport default new Vuex.Store({\n  actions,\n  mutations,\n  state,\n})\n\n"],"mappings":"AAAA;;AAEA;AACA,OAAOA,GAAG,MAAM,KAAK;AACrB;AACA,OAAOC,IAAI,MAAM,MAAM;;AAEvB;AACA,MAAMC,OAAO,GAAG;EACdC,GAAG,CAACC,OAAO,EAACC,KAAK,EAAC;IAChBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAACH,OAAO,EAACC,KAAK,CAAC;IAC7CD,OAAO,CAACI,MAAM,CAAC,KAAK,EAAEH,KAAK,CAAC,EAAC;EAC/B,CAAC;;EACDI,IAAI,CAACL,OAAO,EAACC,KAAK,EAAC;IACjBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChCH,OAAO,CAACI,MAAM,CAAC,MAAM,EAAEH,KAAK,CAAC;EAC/B,CAAC;EACDK,MAAM,CAACN,OAAO,EAACC,KAAK,EAAC;IACnBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,OAAO,CAAC;IAC3C,IAAGA,OAAO,CAACO,KAAK,CAACC,GAAG,GAAG,CAAC,EAAE;MACxBR,OAAO,CAACI,MAAM,CAAC,QAAQ,EAAEH,KAAK,CAAC;IACjC;EACF,CAAC;EACDQ,OAAO,CAACT,OAAO,EAACC,KAAK,EAAC;IACpBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnCO,UAAU,CAAC,MAAM;MACfV,OAAO,CAACI,MAAM,CAAC,SAAS,EAAEH,KAAK,CAAC;IAClC,CAAC,EAAE,GAAG,CAAC;EACT;AACF,CAAC;;AAED;AACA,MAAMU,SAAS,GAAG;EAChBC,GAAG,CAACL,KAAK,EAACN,KAAK,EAAC;IACdC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAACI,KAAK,EAAEN,KAAK,CAAC;IAC9CM,KAAK,CAACC,GAAG,IAAIP,KAAK;EACpB,CAAC;EACDY,IAAI,CAACN,KAAK,EAACN,KAAK,EAAC;IACfC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACI,KAAK,EAAEN,KAAK,CAAC;IAC/CM,KAAK,CAACC,GAAG,IAAIP,KAAK;EACpB,CAAC;EACDa,MAAM,CAACP,KAAK,EAACN,KAAK,EAAC;IACjBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAACI,KAAK,EAAEN,KAAK,CAAC;IACjDM,KAAK,CAACC,GAAG,IAAIP,KAAK;EACpB,CAAC;EACDc,OAAO,CAACR,KAAK,EAACN,KAAK,EAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAACI,KAAK,EAAEN,KAAK,CAAC;IAClDM,KAAK,CAACC,GAAG,IAAIP,KAAK;EACpB;AACF,CAAC;;AAED;AACA,MAAMM,KAAK,GAAG;EACZC,GAAG,EAAC,CAAC,CAAC;AACR,CAAC;;AAED;AACA,MAAMQ,OAAO,GAAG;EACdC,MAAM,CAACV,KAAK,EAAC;IACX,OAAOA,KAAK,CAACC,GAAG;EAClB;AACF,CAAC;AAEDZ,GAAG,CAACsB,GAAG,CAACrB,IAAI,CAAC;AACb;AACA,eAAe,IAAIA,IAAI,CAACsB,KAAK,CAAC;EAC5BrB,OAAO;EACPa,SAAS;EACTJ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}