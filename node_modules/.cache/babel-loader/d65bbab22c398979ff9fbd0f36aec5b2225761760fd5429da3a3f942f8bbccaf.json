{"ast":null,"code":"import { mapState, mapGetters, mapMutations, mapActions } from 'vuex';\nexport default {\n  name: \"MyCount\",\n  data() {\n    return {\n      num: 1\n    };\n  },\n  computed: {\n    // 借助mapState生成的计算属性，从state中读取数据。（数组写法） \n    ...mapState('abountCount', ['abountCount.state.sum', 'school', 'subject', 'personList']),\n    // 借助mapGetters生成的计算属性，从getters中读取数据。（对象写法） \n    ...mapGetters('abountCount', {\n      bigSum: 'bigSum'\n    })\n  },\n  methods: {\n    // #region \n    // 绕过actions，直接传递给mutations\n    // increment(){\n    //   this.$store.commit('JIA', this.num)\n    // },\n    // decrement(){\n    //  this.$store.commit('JIAN', this.num)\n    // },\n    // \n\n    // 借助mapMutations生成对应的方法，方法中会调用commit去联系mutations（对象写法）\n    // ...mapMutations({increment:'JIA',decrement:'JIAN'}),\n    // \n\n    // 借助mapMutations生成对应的方法，方法中会调用commit去联系mutations（数组写法）\n    ...mapMutations(['JIA', 'JIAN']),\n    // #endregion\n\n    // incrementOdd(){\n    //   this.$store.dispatch('jiaOdd', this.num)\n    // },\n    // incrementWait(){\n    //   this.$store.dispatch('jiaWait', this.num)\n    // },\n    // 借助mmapActions生成对应的方法，方法中会调用dispatch去联系actions(对象写法)\n    ...mapActions({\n      incrementOdd: 'jiaOdd',\n      incrementWait: 'jiaWait'\n    })\n\n    // 借助mmapActions生成对应的方法，方法中会调用dispatch去联系actions（数组写法）\n    // ...mapActions(['jiaOdd','jiaWait'])\n  },\n\n  mounted() {\n    console.log(this.$store.state);\n  }\n};","map":{"version":3,"mappings":"AAoBA;AACA;EACAA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACA;IACA;IACA;IACA;MAAAC;IAAA;EAEA;EACAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MAAAC;MAAAC;IAAA;;IAEA;IACA;EACA;;EACAC;IACAC;EACA;AACA","names":["name","data","num","computed","bigSum","methods","incrementOdd","incrementWait","mounted","console"],"sourceRoot":"src/components","sources":["Count.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 模版中可以看到VC身上所有的东西，所以这里直接$store,不用加this.$store -->\n    <h1>当前求和: {{ sum }}</h1> \n    <h3>当前和放大10倍: {{ bigSum }}</h3> \n    <h3>我在{{ school }}学习{{ subject }}</h3>\n    <!-- <h3 style=\"color: red;\">组件Person人员总数是:{{ personList.length }}</h3> -->\n    <h3 style=\"color: red;\">组件Person人员总数是:???</h3>\n    <select v-model.number=\"num\">\n      <option value=\"1\">1</option>\n      <option value=\"2\">2</option>\n      <option value=\"3\">3</option>\n    </select>\n    <button @click=\"JIA(num)\">+</button>\n    <button @click=\"JIAN(num)\">-</button>\n    <button @click=\"incrementOdd(num)\">当前求和为奇数再加</button>\n    <button @click=\"incrementWait(num)\">等一等再加</button>\n  </div>\n</template>\n<script>\n  import { mapState, mapGetters,mapMutations, mapActions } from 'vuex'\n  export default {\n    name:\"MyCount\",\n    data() {\n      return {\n        num: 1\n      }\n    },\n    computed:{ \n      // 借助mapState生成的计算属性，从state中读取数据。（数组写法） \n      ...mapState('abountCount',['abountCount.state.sum','school','subject','personList']), \n      // 借助mapGetters生成的计算属性，从getters中读取数据。（对象写法） \n      ...mapGetters('abountCount',{bigSum:'bigSum'}),\n\n    },\n    methods: {\n      // #region \n      // 绕过actions，直接传递给mutations\n      // increment(){\n      //   this.$store.commit('JIA', this.num)\n      // },\n      // decrement(){\n      //  this.$store.commit('JIAN', this.num)\n      // },\n      // \n\n      // 借助mapMutations生成对应的方法，方法中会调用commit去联系mutations（对象写法）\n      // ...mapMutations({increment:'JIA',decrement:'JIAN'}),\n      // \n      \n      // 借助mapMutations生成对应的方法，方法中会调用commit去联系mutations（数组写法）\n      ...mapMutations(['JIA','JIAN']),\n      // #endregion\n\n      // incrementOdd(){\n      //   this.$store.dispatch('jiaOdd', this.num)\n      // },\n      // incrementWait(){\n      //   this.$store.dispatch('jiaWait', this.num)\n      // },\n      // 借助mmapActions生成对应的方法，方法中会调用dispatch去联系actions(对象写法)\n      ...mapActions({incrementOdd:'jiaOdd',incrementWait:'jiaWait'}),\n\n      // 借助mmapActions生成对应的方法，方法中会调用dispatch去联系actions（数组写法）\n      // ...mapActions(['jiaOdd','jiaWait'])\n    },\n    mounted() {\n      console.log(this.$store.state)\n    },\n  }\n  \n</script>\n<style>\n  button{\n    margin-left: 10px;\n  }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}