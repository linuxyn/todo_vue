{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport todosHeader from './components/todosHeader';\nimport todosList from './components/todosList';\nimport todosFooter from './components/todosFooter';\nexport default {\n  name: 'App',\n  components: {\n    todosHeader,\n    todosList,\n    todosFooter\n  },\n  data() {\n    return {\n      todos: [\n        // {id: '001',title:'吃饭',done:false},\n        // {id: '002',title:'睡觉',done:false},\n        // {id: '003',title:'打豆豆',done:true},\n        // {id: '004',title:'学习',done:false},\n      ]\n    };\n  },\n  methods: {\n    // 添加一个todo\n    addTodo(todoObj) {\n      console.log('App收到了子组件Header传过来的要添加的todo对象', todoObj);\n      this.todos.unshift(todoObj);\n    },\n    // 勾选或者取消勾选\n    checkTodo(id) {\n      console.log('App收到了子组件Item传过来的是否要勾选的checkObj对象', id);\n      this.todos.forEach(todo => {\n        if (todo.id == id) {\n          // 原来的值取反，赋值回去就可以了\n          todo.done = !todo.done;\n        }\n      });\n    },\n    // 删除一个todo\n    deleteTodo(id) {\n      console.log('App收到了子组件Item传过来的要删除的todo的id', id);\n      this.todos = this.todos.filter(todo => todo.id !== id);\n    },\n    // 全选或者取消全选\n    checkAllTodo(done) {\n      console.log('App收到了子组件footer传过来的是否要全选或者取消全选', done);\n      this.todos.forEach(todo => {\n        todo.done = done;\n      });\n    },\n    // 清除已完成任务\n    clearAlltodo() {\n      this.todos = this.todos.filter(todo => {\n        return !todo.done;\n      });\n    }\n  },\n  watch: {\n    todos: {\n      immediate: true,\n      deep: true,\n      handler(value) {\n        localStorage.setItem('todos', JSON.stringify(value));\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAqBA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;QACA;QACA;QACA;QACA;MAAA;IAEA;EACA;EACAC;IACA;IACAC;MACAC;MACA;IACA;IACA;IACAC;MACAD;MACA;QACA;UACA;UACAE;QACA;MACA;IACA;IACA;IACAC;MACAH;MACA;IACA;IACA;IACAI;MACAJ;MACA;QACAE;MACA;IACA;IACA;IACAG;MACA;QACA;MACA;IACA;EACA;EACAC;IACAT;MACAU;MACAC;MACAC;QACAC;MACA;IACA;EACA;AACA","names":["name","components","todosHeader","todosList","todosFooter","data","todos","methods","addTodo","console","checkTodo","todo","deleteTodo","checkAllTodo","clearAlltodo","watch","immediate","deep","handler","localStorage"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"todo-container\">\n      <div class=\"todo-wrap\">\n        <!-- 通过App给子组件传递函数，主要是为了接收子组件中函数的返回值 -->\n        <todosHeader :addTodo=\"addTodo\"/>\n        <todosList \n          :todos=\"todos\" \n          :checkTodo=\"checkTodo\"\n          :deleteTodo=\"deleteTodo\"\n        />\n        <todosFooter :todos=\"todos\" \n          :checkAllTodo=\"checkAllTodo\" \n          :clearAlltodo=\"clearAlltodo\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport todosHeader from './components/todosHeader';\nimport todosList from './components/todosList';\nimport todosFooter from './components/todosFooter';\n\nexport default {\n  name: 'App',\n  components: {\n    todosHeader,\n    todosList,\n    todosFooter,\n  },\n  data() {\n    return {\n        todos: [\n        // {id: '001',title:'吃饭',done:false},\n        // {id: '002',title:'睡觉',done:false},\n        // {id: '003',title:'打豆豆',done:true},\n        // {id: '004',title:'学习',done:false},\n        ]\n      }\n  },\n  methods: {\n    // 添加一个todo\n    addTodo(todoObj){\n      console.log('App收到了子组件Header传过来的要添加的todo对象',todoObj)\n      this.todos.unshift(todoObj)\n    },\n    // 勾选或者取消勾选\n    checkTodo(id){\n      console.log('App收到了子组件Item传过来的是否要勾选的checkObj对象',id)\n      this.todos.forEach((todo)=>{\n        if(todo.id == id){\n          // 原来的值取反，赋值回去就可以了\n          todo.done = !todo.done\n        }\n      })\n    },\n    // 删除一个todo\n    deleteTodo(id){\n      console.log('App收到了子组件Item传过来的要删除的todo的id',id)\n      this.todos =  this.todos.filter(todo=> todo.id !== id)\n    },\n    // 全选或者取消全选\n    checkAllTodo(done){\n      console.log('App收到了子组件footer传过来的是否要全选或者取消全选',done)\n      this.todos.forEach(todo => {\n        todo.done = done\n      });\n    },\n    // 清除已完成任务\n    clearAlltodo(){\n      this.todos = this.todos.filter((todo)=>{\n      return !todo.done\n      })\n    }\n  },\n  watch: {\n    todos:{\n      immediate: true,\n      deep:true,\n      handler(value){\n        localStorage.setItem('todos', JSON.stringify(value))\n      }\n    }\n  }\n}\n</script>\n\n<style>\n  /*base*/\n  body {\n    background: #fff;\n  }\n\n  .btn {\n    display: inline-block;\n    padding: 4px 12px;\n    margin-bottom: 0;\n    font-size: 14px;\n    line-height: 20px;\n    text-align: center;\n    vertical-align: middle;\n    cursor: pointer;\n    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);\n    border-radius: 4px;\n  }\n\n  .btn-danger {\n    color: #fff;\n    background-color: #da4f49;\n    border: 1px solid #bd362f;\n  }\n\n  .btn-danger:hover {\n    color: #fff;\n    background-color: #bd362f;\n  }\n\n  .btn:focus {\n    outline: none;\n  }\n\n  .todo-container {\n    width: 600px;\n    margin: 0 auto;\n  }\n  .todo-container .todo-wrap {\n    padding: 10px;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}